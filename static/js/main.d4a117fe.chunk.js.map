{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","className","onSubmit","e","preventDefault","props","type","value","this","onChange","setState","target","React","Component","ImageCard","spans","imageRef","createRef","current","addEventListener","height","clientHeight","Math","ceil","image","urls","alt_description","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","id","App","onSearchSubmit","a","async","unsplash","get","params","query","response","data","results","marginTop","length","ReactDOM","render","document","getElementById"],"mappings":"6PAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cACE,gFCyBSC,E,2MA5BbC,MAAQ,CAAEC,KAAM,I,wEAEN,IAAD,OACP,OACE,yBAAKC,UAAU,cACb,0BACEA,UAAU,UACVC,SAAU,SAAAC,GACRA,EAAEC,iBACF,EAAKC,MAAMH,SAAS,EAAKH,MAAMC,QAGjC,yBAAKC,UAAU,SACb,+CACA,2BACEK,KAAM,OACNC,MAAOC,KAAKT,MAAMC,KAClBS,SAAU,SAAAN,GACR,EAAKO,SAAS,CAAEV,KAAMG,EAAEQ,OAAOJ,kB,GAnBvBK,IAAMC,WC8BfC,G,kBA3Bb,WAAYT,GAAQ,IAAD,8BACjB,4CAAMA,KAHRN,MAAQ,CAAEgB,MAAO,GAKf,EAAKC,SAAWJ,IAAMK,YAHL,E,iFAME,IAAD,OAClBT,KAAKQ,SAASE,QAAQC,iBAAiB,QAAQ,WAC7C,IAAMC,EAAS,EAAKJ,SAASE,QAAQG,aAC/BN,EAAQO,KAAKC,KAAKH,EAAS,IAEjC,EAAKV,SAAS,CAAEK,e,+BAIV,IAAD,EAC2BP,KAAKH,MAAMmB,MAArCC,EADD,EACCA,KAAMC,EADP,EACOA,gBAGd,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUpB,KAAKT,MAAMgB,SAC3C,yBAAKc,IAAKrB,KAAKQ,SAAUc,IAAKL,EAAKM,QAASC,IAAKN,S,GAxBjCd,IAAMC,YCYfoB,EAVG,SAAA5B,GAChB,OACE,yBAAKJ,UAAU,cACZI,EAAM6B,OAAOC,KAAI,SAAAX,GAAK,OACrB,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,SCmB1Bc,E,2MArBbvC,MAAQ,CAAEmC,OAAQ,I,EAElBK,eAAiB,SAAMvC,GAAN,eAAAwC,EAAAC,OAAA,kEAAAD,EAAA,MACQE,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAO7C,MAFJ,OACT8C,EADS,OAKf,EAAKpC,SAAS,CAAEwB,OAAQY,EAASC,KAAKC,UALvB,sC,wEASf,OACE,yBAAK/C,UAAU,eAAe0B,MAAO,CAAEsB,UAAW,SAChD,kBAAC,EAAD,CAAW/C,SAAUM,KAAK+B,iBAD5B,SAES/B,KAAKT,MAAMmC,OAAOgB,OAF3B,WAGE,kBAAC,EAAD,CAAWhB,OAAQ1B,KAAKT,MAAMmC,c,GAhBpBtB,IAAMC,WCAxBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d4a117fe.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization:\n      'Client-ID 661ec7b1a76ba3f972b7b3f3a70278b5fb4934c739c2eb7f145c51ec3ef0a441'\n  }\n});\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form\n          className=\"ui form\"\n          onSubmit={e => {\n            e.preventDefault();\n            this.props.onSubmit(this.state.term);\n          }}\n        >\n          <div className=\"field\">\n            <label>Image Search</label>\n            <input\n              type={'text'}\n              value={this.state.term}\n              onChange={e => {\n                this.setState({ term: e.target.value });\n              }}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n  state = { spans: 0 };\n\n  constructor(props) {\n    super(props);\n\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', () => {\n      const height = this.imageRef.current.clientHeight;\n      const spans = Math.ceil(height / 10);\n\n      this.setState({ spans });\n    });\n  }\n\n  render() {\n    const { urls, alt_description } = this.props.image;\n\n    // noinspection JSUnresolvedVariable\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} src={urls.regular} alt={alt_description} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport './ImageList.css';\nimport ImageCard from './ImageCard';\n\nconst ImageList = props => {\n  return (\n    <div className=\"image-list\">\n      {props.images.map(image => (\n        <ImageCard key={image.id} image={image} />\n      ))}\n    </div>\n  );\n};\n\nexport default ImageList;\n","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  onSearchSubmit = async term => {\n    const response = await unsplash.get('/search/photos', {\n      params: { query: term }\n    });\n\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        Found {this.state.images.length} images.\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}